plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sudosumo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server:6.3.3'
	implementation 'org.springframework.security:spring-security-oauth2-jose:6.3.3'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.3.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.3'
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'org.projectlombok:lombok:1.18.34'

	compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootRun {
    doFirst {
        def envFile = file('.env')
        if (envFile.exists()) {
            def envVars = new Properties()
            envFile.withInputStream { stream ->
                envVars.load(stream)
            }
            envVars.each { key, value ->
                environment(key, value)
            }
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
